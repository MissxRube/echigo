@using goshopping.Models;
@model goshopping.Models.Products

@{
    ViewBag.Title = "商品資料" + ((Model.rowid > 0) ? "修改" : "新增");
    Layout = "~/Views/Shared/_LayoutEdit.cshtml";
}

@using (Html.BeginForm("Edit", "Products", new { area = "Vendor" }, FormMethod.Post, new { id = "popupForm" }))
{
    @Html.AntiForgeryToken()
    if (Model != null && Model.rowid > 0)
    {
        @Html.HiddenFor(model => model.rowid)
        @Html.HiddenFor(model => model.product_spec)
        @Html.HiddenFor(model => model.category_name)
        @Html.HiddenFor(model => model.vendor_no)
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.product_no, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextBoxFor(model => model.product_no, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.product_no)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextBoxFor(model => model.product_name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.product_name)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.categoryid, htmlAttributes: new { @class = "control-label control-header" })
        @Html.DropDownList("categoryid", (IEnumerable<SelectListItem>)ViewBag.CategoryList, new { @class = "form-control"})
        @Html.ValidationMessageFor(model => model.categoryid)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextBoxFor(model => model.price, new { @class = "form-control", @type = "number" })
        @Html.ValidationMessageFor(model => model.price)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.size_name, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextBoxFor(model => model.size_name, new { @class = "form-control" , @PlaceHolder = "請用,號隔開" })
        @Html.ValidationMessageFor(model => model.size_name)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.color_name, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextBoxFor(model => model.color_name, new { @class = "form-control" , @PlaceHolder = "請用,號隔開"})
        @Html.ValidationMessageFor(model => model.color_name)
    </div>
    @*<div class="form-group">
        @Html.LabelFor(model => model.bool_istop, htmlAttributes: new { @class = "control-label control-header" })
        @Html.CheckBoxFor(model => model.bool_istop, new { @class = "form-control form-control-checkbox" })
        @Html.ValidationMessageFor(model => model.bool_istop)
    </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.bool_issale, htmlAttributes: new { @class = "control-label control-header" })
        @Html.CheckBoxFor(model => model.bool_issale, new { @class = "form-control form-control-checkbox" })
        @Html.ValidationMessageFor(model => model.bool_issale)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.bool_iscolor, htmlAttributes: new { @class = "control-label control-header" })
        @Html.CheckBoxFor(model => model.bool_iscolor, new { @class = "form-control form-control-checkbox" })
        @Html.ValidationMessageFor(model => model.bool_iscolor)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.bool_issize, htmlAttributes: new { @class = "control-label control-header" })
        @Html.CheckBoxFor(model => model.bool_issize, new { @class = "form-control form-control-checkbox" })
        @Html.ValidationMessageFor(model => model.bool_issize)
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.start_count, htmlAttributes: new { @class = "control-label control-header" })
            @Html.TextBoxFor(model => model.start_count, new { @class = "form-control", @type = "number" })
            @Html.ValidationMessageFor(model => model.start_count)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.browse_count, htmlAttributes: new { @class = "control-label control-header" })
            @Html.TextBoxFor(model => model.browse_count, new { @class = "form-control", @type = "number" })
            @Html.ValidationMessageFor(model => model.browse_count)
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.deadline_start, htmlAttributes: new { @class = "control-label control-header col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.deadline_start, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.deadline_start, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.deadline_end, htmlAttributes: new { @class = "control-label control-header col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.deadline_end, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.deadline_end, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.product_tag, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextBoxFor(model => model.product_tag, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.product_tag)
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.product_content, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextAreaFor(model => model.product_content, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.product_content)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.remark, htmlAttributes: new { @class = "control-label control-header" })
        @Html.TextAreaFor(model => model.remark, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.remark)
    </div>





    <div>
        <input type="submit" value="存檔" class="btn btn-success form-button" />
    </div>
}

<script src="@Url.Content("~/Scripts/apps/datepicker.js")"></script>